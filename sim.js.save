let Sim = require('../models/sim');

var i = 0;
var consumers = [];
var nr_consumers = 5;

function start_simulation(){
	// Initialize consumers consumtion
	for(var i = 0; i < nr_consumers; i++){
		consumers[i] = init_consumer(); // Math.random() * 85
	}

	// Initialize wind speed

	const newSim = new Sim({
		total_consumtion:0,
		total_production:0,
		price:1.5,
		wind:init_wind(),
	});

	//setInterval(wind_cycle, 1000);
}

/*
 let newUser = new User({
      name:name,
      email:email,
      username:username,
      password:password,
      role:role
    });

    bcrypt.genSalt(10, function(err, salt){
      bcrypt.hash(newUser.password, salt, function(err, hash){
        if(err){
          console.log(err);
        }
        newUser.password = hash;
        newUser.save(function(err){
          if(err){
            console.log(err);
            return;
          } else {
            req.flash('success', 'You are now registered and can log in');
            res.redirect('/login');
          }
        });
      });
    })
  }*/


function book_consumtion(){
	clearInterval(i);
	// Create code for calculating consumtion of this cycle

	var cycle_consumtion = 0;
	for(var i = 0; i < nr_consumers; i++){
		cycle_consumtion += consumers[i];
	}

	/*
	// Calc prosumers

	for(var i = 0; i < nr_prosumers; i++){
		// do calcs here
	}

	*/

	// update db with new cycle consumtion

	i = setInterval(produce, 333);
}

function produce(){
	clearInterval(i);
	// Create code for calculating production

	/*	Prosumer steps:
		1. get wind from db
		2. View demand and calc production
	*/


	/*	Price model:
			Price limits: 0.5 - 5kr
			Base price: wind_status =>
						0.5 kr - High
						1.5 kr - Average
						 2  kr - Under average
						 3  kr - None/low
			Surcharge price:
				tProd > tCons				0 kr
				tProd < tCons				1 kr
				tProd + one house  (55x1) < tCons	2 kr
				tProd + two houses (55x2) < tCons	3 kr
	*/

	i = setInterval(consume, 333);
}

function consume(){
	clearInterval(i)
	// Create code for removing energy and maybe cause blackout

	for(var i = 0; i < nr_consumers; i++){
		consumers[i] = change_consumtion(consumtion, mean, qL, qU);
	}

	i = setInterval(book_consumtion, 333);
}

function wind_cycle(){
	wind_speed = 0;	// Get the wind_speed from the db

	wind_speed = change_wind(wind_speed);

	// Update db with new wind_speed
}

exports.
 let newUser = new User({
      name:name,
      email:email,
      username:username,
      password:password,
      role:role
    });

    bcrypt.genSalt(10, function(err, salt){
      bcrypt.hash(newUser.password, salt, function(err, hash){
        if(err){
          console.log(err);
        }
        newUser.password = hash;
        newUser.save(function(err){
          if(err){
            console.log(err);
            return;
          } else {
            req.flash('success', 'You are now registered and can log in');
            res.redirect('/login');
          }
        });
      });
    })
  }
